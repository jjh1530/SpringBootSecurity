
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: cos
    password: cos1234
  main:
    allow-circular-references: true

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 547829327583-sm0l72onfcl1p6541autoln5jb0ma3r7.apps.googleusercontent.com
            client-secret: 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
            scope:
            - email
            - profile
          facebook:
            client-id: 191116210216463
            client-secret: 2326010703dd91cdc6236b0824d28137
            scope:
            - email
            - public_profile
          naver:
            client-id: Ksmi0k6Zf_AC9p_5ProU
            client-secret: DyYoEU1qJr
            scope:
            - name
            - email
            client-name: Naver
            authorization-grant-type: authorization_code 
            redirect-uri: http://localhost:8080/login/oauth2/code/naver  #naver는 OAuth공식이 아니기에 설정해줘야함
            
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json으로 받아 response라는 키값으로 리턴
       
            
